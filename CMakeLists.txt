project(newmacemu)
enable_testing()
cmake_minimum_required(VERSION 3.25)
find_package(SDL2 REQUIRED CONFIG REQUIRED COMPONENTS SDL2)
enable_language(CXX)
set(CMAKE_CXX_STANDARD 20) 
set(CMAKE_CXX_STANDARD_REQUIRED ON) 
find_package(Boost REQUIRED CONFIG REQUIRED COMPONENTS unit_test_framework)
if(MSVC)
  # Force to always compile with W4
  if(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
    string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
  endif()
elseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  # Update if necessary
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
endif()
add_executable(newmacemu src/cpu/m68k_ea.cc src/cpu/68040_mmu.cc src/cpu/exception.cc src/cpu/movem.cc src/cpu/68040_fpu.cc src/cpu/opcodes.cc src/68040.cc src/bus.cc src/memory.cc src/io.cc)
add_executable(testcpu test/test_main.cc 
test/ea.cc test/ori.cc
test/arithmetric.cc test/bitfields.cc test/nz.cc test/store.cc test/bits.cc test/fpu.cc src/cpu/m68k_ea.cc src/cpu/68040_fpu.cc src/cpu/68040_mmu.cc src/cpu/exception.cc src/cpu/movem.cc src/cpu/opcodes.cc src/bus.cc src/memory.cc src/io.cc)
target_link_libraries(newmacemu gmp mpfr SDL2::SDL2 fmt)
target_include_directories(newmacemu PRIVATE "./include")
target_link_libraries(testcpu gmp mpfr SDL2::SDL2 fmt Boost::unit_test_framework)
target_include_directories(testcpu PRIVATE "./include" ${Boost_INCLUDE_DIRS})

add_test(NAME core COMMAND $<TARGET_FILE:testcpu> )
add_test(NAME ea/r COMMAND $<TARGET_FILE:testcpu> --run_test=EA/R/*)
add_test(NAME ea/w COMMAND $<TARGET_FILE:testcpu> --run_test=EA/W/*)
add_test(NAME ea/addr COMMAND $<TARGET_FILE:testcpu> --run_test=EA/ADDR/*)
add_test(NAME ori COMMAND $<TARGET_FILE:testcpu> --run_test=ORI/*)
