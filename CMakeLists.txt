project(newmacemu)
enable_testing()
include(CTest)
cmake_minimum_required(VERSION 3.25)
find_package(SDL2 REQUIRED CONFIG REQUIRED COMPONENTS SDL2)
enable_language(CXX)
set(CMAKE_CXX_STANDARD 20) 
set(CMAKE_CXX_STANDARD_REQUIRED ON) 
find_package(Boost REQUIRED CONFIG REQUIRED COMPONENTS unit_test_framework)
if(MSVC)
  # Force to always compile with W4
  if(CMAKE_CXX_FLAGS MATCHES "/W[0-4]")
    string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
  endif()
elseif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  # Update if necessary
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
endif()
add_executable(newmacemu src/cpu/m68k_ea.cc src/cpu/68040_mmu.cc src/cpu/exception.cc src/cpu/op_movem.cc src/cpu/68040_fpu.cc src/cpu/opcodes.cc src/68040.cc src/bus.cc src/memory.cc src/io.cc)
add_executable(testcpu test/test_main.cc 
test/cpu/ea.cc 
test/cpu/abcd.cc test/cpu/nbcd.cc test/cpu/pack.cc test/cpu/sbcd.cc test/cpu/unpk.cc
test/cpu/add.cc test/cpu/adda.cc test/cpu/addi.cc test/cpu/addq.cc test/cpu/addx.cc 
test/cpu/sub.cc test/cpu/suba.cc test/cpu/subi.cc  test/cpu/subq.cc  test/cpu/subx.cc 
test/cpu/and.cc test/cpu/andi.cc
test/cpu/cmp.cc test/cpu/cmpa.cc test/cpu/cmpi.cc test/cpu/cmpm.cc test/cpu/cmp2.cc
test/cpu/asl.cc test/cpu/asr.cc test/cpu/lsl.cc  test/cpu/lsr.cc 
test/cpu/rol.cc test/cpu/ror.cc test/cpu/roxl.cc  test/cpu/roxr.cc
test/cpu/bcc.cc test/cpu/bra.cc test/cpu/dbcc.cc test/cpu/jmp.cc test/cpu/jsr.cc test/cpu/lea.cc test/cpu/pea.cc test/cpu/scc.cc
test/cpu/bchg.cc test/cpu/bclr.cc test/cpu/bset.cc
test/cpu/bfchg.cc test/cpu/bfclr.cc test/cpu/bfexts.cc test/cpu/bfextu.cc test/cpu/bfffo.cc test/cpu/bfins.cc test/cpu/bfset.cc test/cpu/bftst.cc
test/cpu/bkpt.cc test/cpu/chk.cc  test/cpu/chk2.cc
test/cpu/cas.cc test/cpu/cas2.cc
test/cpu/clr.cc test/cpu/neg.cc test/cpu/negx.cc test/cpu/not.cc
test/cpu/divs.cc test/cpu/divu.cc test/cpu/muls.cc  test/cpu/mulu.cc
test/cpu/eor.cc test/cpu/eori.cc
test/cpu/exg.cc test/cpu/ext.cc test/cpu/swap.cc
test/cpu/illegal.cc  test/cpu/nop.cc test/cpu/trap.cc  test/cpu/trapcc.cc test/cpu/trapv.cc
test/cpu/link.cc test/cpu/rtd.cc  test/cpu/rtr.cc test/cpu/rts.cc test/cpu/unlk.cc
test/cpu/move.cc test/cpu/movea.cc test/cpu/move16.cc test/cpu/movem.cc test/cpu/movep.cc test/cpu/moveq.cc
test/cpu/or.cc test/cpu/ori.cc
test/cpu/tas.cc test/cpu/tst.cc
src/cpu/m68k_ea.cc src/cpu/68040_fpu.cc src/cpu/68040_mmu.cc src/cpu/exception.cc src/cpu/op_movem.cc src/cpu/opcodes.cc src/bus.cc src/memory.cc src/io.cc)
add_executable(testfpu test/test_main.cc 
test/fpu/common.cc
src/cpu/m68k_ea.cc src/cpu/68040_fpu.cc src/cpu/68040_mmu.cc src/cpu/exception.cc src/cpu/op_movem.cc src/cpu/opcodes.cc src/bus.cc src/memory.cc src/io.cc
test/fpu/fabs.cc test/fpu/fneg.cc  test/fpu/fsub.cc test/fpu/ftan.cc  test/fpu/ftanh.cc
test/fpu/facos.cc test/fpu/fasin.cc  test/fpu/fatanh.cc  test/fpu/fsinh.cc  test/fpu/fcosh.cc
test/fpu/fcos.cc test/fpu/fsin.cc test/fpu/fsincos.cc test/fpu/fatan.cc 
test/fpu/fetox.cc test/fpu/fetoxm1.cc test/fpu/fgetexp.cc test/fpu/fgetman.cc test/fpu/fscale.cc test/fpu/ftentox.cc 
test/fpu/flog10.cc test/fpu/flog2.cc  test/fpu/flogn.cc test/fpu/flognp1.cc
test/fpu/fbcc.cc test/fpu/fnop.cc test/fpu/fscc.cc test/fpu/fcmp.cc test/fpu/fdbcc.cc
test/fpu/fadd.cc test/fpu/fdiv.cc test/fpu/fmod.cc test/fpu/fmul.cc test/fpu/frem.cc
test/fpu/fsgldiv.cc test/fpu/fsglmul.cc
test/fpu/fmove.cc test/fpu/fmovecr.cc test/fpu/fmovem.cc test/fpu/ftrapcc.cc test/fpu/ftwotox.cc
test/fpu/fint.cc test/fpu/fintrz.cc test/fpu/fsqrt.cc test/fpu/ftst.cc
)
target_link_libraries(newmacemu gmp mpfr SDL2::SDL2 fmt)
target_include_directories(newmacemu PRIVATE "./include")
target_link_libraries(testcpu gmp mpfr SDL2::SDL2 fmt Boost::unit_test_framework)
target_include_directories(testcpu PRIVATE "./include" ${Boost_INCLUDE_DIRS})
target_link_libraries(testfpu gmp mpfr SDL2::SDL2 fmt Boost::unit_test_framework)
target_include_directories(testfpu PRIVATE "./include" ${Boost_INCLUDE_DIRS})

# add_test(NAME cpu COMMAND $<TARGET_FILE:testcpu> )
add_test(NAME ea/r COMMAND $<TARGET_FILE:testcpu> --run_test=EA/Read/*)
add_test(NAME ea/w COMMAND $<TARGET_FILE:testcpu> --run_test=EA/Write/*)
add_test(NAME ea/addr COMMAND $<TARGET_FILE:testcpu> --run_test=EA/ADDR/*)
add_test(NAME abcd COMMAND $<TARGET_FILE:testcpu> --run_test=ABCD/*)
add_test(NAME add COMMAND $<TARGET_FILE:testcpu> --run_test=ADD/*)
add_test(NAME adda COMMAND $<TARGET_FILE:testcpu> --run_test=ADDA/*)
add_test(NAME addi COMMAND $<TARGET_FILE:testcpu> --run_test=ADDI/*)
add_test(NAME addq COMMAND $<TARGET_FILE:testcpu> --run_test=ADDQ/*)
add_test(NAME addx COMMAND $<TARGET_FILE:testcpu> --run_test=ADDX/*)
add_test(NAME and COMMAND $<TARGET_FILE:testcpu> --run_test=AND/*)
add_test(NAME andi COMMAND $<TARGET_FILE:testcpu> --run_test=ANDI/*)
add_test(NAME asl COMMAND $<TARGET_FILE:testcpu> --run_test=ASL/*)
add_test(NAME asr COMMAND $<TARGET_FILE:testcpu> --run_test=ASR/*)
add_test(NAME bcc COMMAND $<TARGET_FILE:testcpu> --run_test=Bcc/*)
add_test(NAME bchg COMMAND $<TARGET_FILE:testcpu> --run_test=BCHG/*)
add_test(NAME bclr COMMAND $<TARGET_FILE:testcpu> --run_test=BCLR/*)
add_test(NAME bfchg COMMAND $<TARGET_FILE:testcpu> --run_test=BFCHG/*)
add_test(NAME bfclr COMMAND $<TARGET_FILE:testcpu> --run_test=BFCLR/*)
add_test(NAME bfexts COMMAND $<TARGET_FILE:testcpu> --run_test=BFEXTS/*)
add_test(NAME bfextu COMMAND $<TARGET_FILE:testcpu> --run_test=BFEXTU/*)
add_test(NAME bfffo COMMAND $<TARGET_FILE:testcpu> --run_test=BFFFO/*)
add_test(NAME bfins COMMAND $<TARGET_FILE:testcpu> --run_test=BFINS/*)
add_test(NAME bfset COMMAND $<TARGET_FILE:testcpu> --run_test=BFSET/*)
add_test(NAME bftst COMMAND $<TARGET_FILE:testcpu> --run_test=BFTST/*)
add_test(NAME bkpt COMMAND $<TARGET_FILE:testcpu> --run_test=BKPT/*)
add_test(NAME bra COMMAND $<TARGET_FILE:testcpu> --run_test=BRA/*)
add_test(NAME bset COMMAND $<TARGET_FILE:testcpu> --run_test=BSET/*)
add_test(NAME cas COMMAND $<TARGET_FILE:testcpu> --run_test=CAS/*)
add_test(NAME cas2 COMMAND $<TARGET_FILE:testcpu> --run_test=CAS2/*)
add_test(NAME chk COMMAND $<TARGET_FILE:testcpu> --run_test=CHK/*)
add_test(NAME chk2 COMMAND $<TARGET_FILE:testcpu> --run_test=CHK2/*)
add_test(NAME clr COMMAND $<TARGET_FILE:testcpu> --run_test=CLR/*)
add_test(NAME cmp COMMAND $<TARGET_FILE:testcpu> --run_test=CMP/*)
add_test(NAME cmpa COMMAND $<TARGET_FILE:testcpu> --run_test=CMPA/*)
add_test(NAME cmpi COMMAND $<TARGET_FILE:testcpu> --run_test=CMPI/*)
add_test(NAME cmpm COMMAND $<TARGET_FILE:testcpu> --run_test=CMPM/*)
add_test(NAME cmp2 COMMAND $<TARGET_FILE:testcpu> --run_test=CMP2/*)
add_test(NAME dbcc COMMAND $<TARGET_FILE:testcpu> --run_test=DBcc/*)
add_test(NAME divs COMMAND $<TARGET_FILE:testcpu> --run_test=DIVS/*)
add_test(NAME divu COMMAND $<TARGET_FILE:testcpu> --run_test=DIVU/*)
add_test(NAME eor COMMAND $<TARGET_FILE:testcpu> --run_test=EOR/*)
add_test(NAME eori COMMAND $<TARGET_FILE:testcpu> --run_test=EORI/*)
add_test(NAME exg COMMAND $<TARGET_FILE:testcpu> --run_test=EXG/*)
add_test(NAME ext COMMAND $<TARGET_FILE:testcpu> --run_test=EXT/*)
add_test(NAME illegal COMMAND $<TARGET_FILE:testcpu> --run_test=ILLEGAL)
add_test(NAME jmp COMMAND $<TARGET_FILE:testcpu> --run_test=JMP)
add_test(NAME jsr COMMAND $<TARGET_FILE:testcpu> --run_test=JSR)
add_test(NAME lea COMMAND $<TARGET_FILE:testcpu> --run_test=LEA)
add_test(NAME link COMMAND $<TARGET_FILE:testcpu> --run_test=LINK/*)
add_test(NAME lsl COMMAND $<TARGET_FILE:testcpu> --run_test=LSL/*)
add_test(NAME lsr COMMAND $<TARGET_FILE:testcpu> --run_test=LSR/*)
add_test(NAME move COMMAND $<TARGET_FILE:testcpu> --run_test=MOVE/*)
add_test(NAME movea COMMAND $<TARGET_FILE:testcpu> --run_test=MOVEA/*)
add_test(NAME move16 COMMAND $<TARGET_FILE:testcpu> --run_test=MOVE16/*)
add_test(NAME movem COMMAND $<TARGET_FILE:testcpu> --run_test=MOVEM/*)
add_test(NAME movep COMMAND $<TARGET_FILE:testcpu> --run_test=MOVEP/*)
add_test(NAME moveq COMMAND $<TARGET_FILE:testcpu> --run_test=MOVEQ/*)
add_test(NAME muls COMMAND $<TARGET_FILE:testcpu> --run_test=MULS/*)
add_test(NAME mulu COMMAND $<TARGET_FILE:testcpu> --run_test=MULU/*)
add_test(NAME nbcd COMMAND $<TARGET_FILE:testcpu> --run_test=NBCD/*)
add_test(NAME neg COMMAND $<TARGET_FILE:testcpu> --run_test=NEG/*)
add_test(NAME negx COMMAND $<TARGET_FILE:testcpu> --run_test=NEGX/*)
add_test(NAME nop COMMAND $<TARGET_FILE:testcpu> --run_test=NOP)
add_test(NAME not COMMAND $<TARGET_FILE:testcpu> --run_test=NOT/*)
add_test(NAME or COMMAND $<TARGET_FILE:testcpu> --run_test=OR/*)
add_test(NAME ori COMMAND $<TARGET_FILE:testcpu> --run_test=ORI/*)
add_test(NAME pack COMMAND $<TARGET_FILE:testcpu> --run_test=PACK/*)
add_test(NAME pea COMMAND $<TARGET_FILE:testcpu> --run_test=PEA)
add_test(NAME rol COMMAND $<TARGET_FILE:testcpu> --run_test=ROL/*)
add_test(NAME ror COMMAND $<TARGET_FILE:testcpu> --run_test=ROR/*)
add_test(NAME roxl COMMAND $<TARGET_FILE:testcpu> --run_test=ROXL/*)
add_test(NAME roxr COMMAND $<TARGET_FILE:testcpu> --run_test=ROXR/*)
add_test(NAME rtd COMMAND $<TARGET_FILE:testcpu> --run_test=RTD)
add_test(NAME rtr COMMAND $<TARGET_FILE:testcpu> --run_test=RTR)
add_test(NAME rts COMMAND $<TARGET_FILE:testcpu> --run_test=RTS)
add_test(NAME sbcd COMMAND $<TARGET_FILE:testcpu> --run_test=SBCD/*)
add_test(NAME sub COMMAND $<TARGET_FILE:testcpu> --run_test=SUB/*)
add_test(NAME suba COMMAND $<TARGET_FILE:testcpu> --run_test=SUBA/*)
add_test(NAME subi COMMAND $<TARGET_FILE:testcpu> --run_test=SUBI/*)
add_test(NAME subq COMMAND $<TARGET_FILE:testcpu> --run_test=SUBQ/*)
add_test(NAME subx COMMAND $<TARGET_FILE:testcpu> --run_test=SUBX/*)
add_test(NAME swap COMMAND $<TARGET_FILE:testcpu> --run_test=SWAP/*)
add_test(NAME tas COMMAND $<TARGET_FILE:testcpu> --run_test=TAS/*)
add_test(NAME trap COMMAND $<TARGET_FILE:testcpu> --run_test=TRAP)
add_test(NAME trapcc COMMAND $<TARGET_FILE:testcpu> --run_test=TRAPcc/*)
add_test(NAME trapv COMMAND $<TARGET_FILE:testcpu> --run_test=TRAPV/*)
add_test(NAME tst COMMAND $<TARGET_FILE:testcpu> --run_test=TST/*)
add_test(NAME unlk COMMAND $<TARGET_FILE:testcpu> --run_test=UNLK)
add_test(NAME unpk COMMAND $<TARGET_FILE:testcpu> --run_test=UNPK/*)


add_test(NAME fabs COMMAND $<TARGET_FILE:testfpu> --run_test=FABS/*)
add_test(NAME fsabs COMMAND $<TARGET_FILE:testfpu> --run_test=FSABS/*)
add_test(NAME fdabs COMMAND $<TARGET_FILE:testfpu> --run_test=FDABS/*)
add_test(NAME facos COMMAND $<TARGET_FILE:testfpu> --run_test=FACOS/*)
add_test(NAME fadd COMMAND $<TARGET_FILE:testfpu> --run_test=FADD/*)
add_test(NAME fsadd COMMAND $<TARGET_FILE:testfpu> --run_test=FSADD/*)
add_test(NAME fdadd COMMAND $<TARGET_FILE:testfpu> --run_test=FDADD/*)
add_test(NAME fasin COMMAND $<TARGET_FILE:testfpu> --run_test=FASIN/*)
add_test(NAME fatan COMMAND $<TARGET_FILE:testfpu> --run_test=FATAN/*)
add_test(NAME fatanh COMMAND $<TARGET_FILE:testfpu> --run_test=FATANH/*)
add_test(NAME fbcc COMMAND $<TARGET_FILE:testfpu> --run_test=FBcc/*)
add_test(NAME fcmp COMMAND $<TARGET_FILE:testfpu> --run_test=FCMP/*)
add_test(NAME fcos COMMAND $<TARGET_FILE:testfpu> --run_test=FCOS/*)
add_test(NAME fcosh COMMAND $<TARGET_FILE:testfpu> --run_test=FCOSH/*)
add_test(NAME fdbcc COMMAND $<TARGET_FILE:testfpu> --run_test=FDBcc/*)
add_test(NAME fetox COMMAND $<TARGET_FILE:testfpu> --run_test=FETOX/*)
add_test(NAME fetoxm1 COMMAND $<TARGET_FILE:testfpu> --run_test=FETOXM1/*)
add_test(NAME fdiv COMMAND $<TARGET_FILE:testfpu> --run_test=FDIV/*)
add_test(NAME fsdiv COMMAND $<TARGET_FILE:testfpu> --run_test=FSDIV/*)
add_test(NAME fddiv COMMAND $<TARGET_FILE:testfpu> --run_test=FDDIV/*)
add_test(NAME fgettexp COMMAND $<TARGET_FILE:testfpu> --run_test=FGETEXP/*)
add_test(NAME fgetman COMMAND $<TARGET_FILE:testfpu> --run_test=FGETMAN/*)
add_test(NAME fint COMMAND $<TARGET_FILE:testfpu> --run_test=FINT/*)
add_test(NAME fintrz COMMAND $<TARGET_FILE:testfpu> --run_test=FINTRZ/*)
add_test(NAME flog10 COMMAND $<TARGET_FILE:testfpu> --run_test=FLOG10/*)
add_test(NAME flog2 COMMAND $<TARGET_FILE:testfpu> --run_test=FLOG2/*)
add_test(NAME flogn COMMAND $<TARGET_FILE:testfpu> --run_test=FLOGN/*)
add_test(NAME flognp1 COMMAND $<TARGET_FILE:testfpu> --run_test=FLOGNP1/*)
add_test(NAME fmod COMMAND $<TARGET_FILE:testfpu> --run_test=FMOD/*)
add_test(NAME fmove COMMAND $<TARGET_FILE:testfpu> --run_test=FMOVE/*)
add_test(NAME fsmove COMMAND $<TARGET_FILE:testfpu> --run_test=FSMOVE/*)
add_test(NAME fdmove COMMAND $<TARGET_FILE:testfpu> --run_test=FDMOVE/*)
add_test(NAME fmovecr COMMAND $<TARGET_FILE:testfpu> --run_test=FMOVECR/*)
add_test(NAME fmovem COMMAND $<TARGET_FILE:testfpu> --run_test=FMOVEM/*)
add_test(NAME fmul COMMAND $<TARGET_FILE:testfpu> --run_test=FMUL/*)
add_test(NAME fsmul COMMAND $<TARGET_FILE:testfpu> --run_test=FSMUL/*)
add_test(NAME fdmul COMMAND $<TARGET_FILE:testfpu> --run_test=FDMUL/*)
add_test(NAME fneg COMMAND $<TARGET_FILE:testfpu> --run_test=FNEG/*)
add_test(NAME fsneg COMMAND $<TARGET_FILE:testfpu> --run_test=FSNEG/*)
add_test(NAME fdneg COMMAND $<TARGET_FILE:testfpu> --run_test=FDNEG/*)
add_test(NAME fnop COMMAND $<TARGET_FILE:testfpu> --run_test=FNOP)
add_test(NAME frem COMMAND $<TARGET_FILE:testfpu> --run_test=FREM/*)
add_test(NAME fscale COMMAND $<TARGET_FILE:testfpu> --run_test=FSCALE/*)
add_test(NAME fsgldiv COMMAND $<TARGET_FILE:testfpu> --run_test=FSGLDIV/*)
add_test(NAME fsglmul COMMAND $<TARGET_FILE:testfpu> --run_test=FSGLMUL/*)
add_test(NAME fsin COMMAND $<TARGET_FILE:testfpu> --run_test=FSIN/*)
add_test(NAME fsincos COMMAND $<TARGET_FILE:testfpu> --run_test=FSINCOS/*)
add_test(NAME fsinh COMMAND $<TARGET_FILE:testfpu> --run_test=FSINH/*)
add_test(NAME fsqrt COMMAND $<TARGET_FILE:testfpu> --run_test=FSQRT/*)
add_test(NAME fssqrt COMMAND $<TARGET_FILE:testfpu> --run_test=FSSQRT/*)
add_test(NAME fdsqrt COMMAND $<TARGET_FILE:testfpu> --run_test=FDSQRT/*)
add_test(NAME fsub COMMAND $<TARGET_FILE:testfpu> --run_test=FSUB/*)
add_test(NAME fssub COMMAND $<TARGET_FILE:testfpu> --run_test=FSSUB/*)
add_test(NAME fdsub COMMAND $<TARGET_FILE:testfpu> --run_test=FDSUB/*)
add_test(NAME ftan COMMAND $<TARGET_FILE:testfpu> --run_test=FTAN/*)
add_test(NAME ftanh COMMAND $<TARGET_FILE:testfpu> --run_test=FTANH/*)
add_test(NAME ftentox COMMAND $<TARGET_FILE:testfpu> --run_test=FTENTOX/*)
add_test(NAME ftrapcc COMMAND $<TARGET_FILE:testfpu> --run_test=FTRAPcc/*)
add_test(NAME ftst COMMAND $<TARGET_FILE:testfpu> --run_test=FTST/*)
add_test(NAME ftwotox COMMAND $<TARGET_FILE:testfpu> --run_test=FTWOTOX/*)


